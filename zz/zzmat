# ----------------------------------------------------------------------------
# Uma coletânea de funções matemática simples
# Em cada função foi colocado um help um pouco mais detalhado,
# pois ficou muito extenso colocar no help do zzmat apenas.
#
# Funções matemáticas disponíveis.
# mmc mdc somatoria produtoria media fat arranjo combinacao pa pa2 pg
# area volume eq2g d2p egr egc egc3p ege
# converte sen cos tan csc sec cot
# log ln abs det conf_eq
# Mais detalhes: zzmat função
#
# Uso: zzmat funcoes [número] [número]
# Ex.: zzmat mmc 8 12
#      zzmat media 5[2] 7 4[3]
#      zzmat somatoria 3 9 2x+3
#
# Autor: Itamar
# Desde: 2011-01-19
# Versão: 3
# Licença: GPL
# Requisitos: zzseq
# ----------------------------------------------------------------------------
zzmat ()
{
	zzzz -h mat $1 && return

	local funcao num
	local pi=3.1415926535897932384626433832795

	# Verificação dos parâmetros
	[ "$1" ] || { zztool uso mat; return; }
	
	funcao="$1"
	
	case "$funcao" in
	"testa_num")
		# Testa se $2 é um número não coberto pela zztool testa_numero*
		echo "$2"|sed 's/^-[\.,]/-0\./;s/^[\.,]/0\./'| grep '^[+-]\{0,1\}[0-9]\{1,\}[,.]\{0,1\}[0-9]*$' >/dev/null
	;;
	"abs")
		if zzmat testa_num $2
		then
			echo $2|tr ',' '.'|sed 's/^-//'
		else
			echo " zzmat $1: Valor Absoluto"
			echo " Uso: zzmat $1 numero"
			return 1
		fi
	;;
	"converte")
		if ([ "$#" -eq "3" ] && zzmat testa_num $3)
		then
			local num1
			num1=$(echo "$3"|tr ',' '.')
			case $2 in
			"gr") num="$num1*$pi/180";;
			"rg") num="$num1*180/$pi";;
			"dr") num="$num1*$pi/200";;
			"rd") num="$num1*200/$pi";;
			"dg") num="$num1*0.9";;
			"gd") num="$num1/0.9";;
			esac
		else
			echo " zzmat $1: Conversões de unidades (não contempladas no zzconverte)"
			echo " Sub-funções:
	gr: graus para radiano
	rg: radiano para graus
	dr: grado para radiano
	rd: radiano para grado
	dg: grado para graus
	gd: graus para grado"
			echo " Uso: zzmat $1 sub-função número"
			return 1
		fi
	;;
	"sen"|"cos"|"tan"|"csc"|"sec"|"cot")
		if ([ "$#" -eq "2" ])
		then
			local num1 num2 ang
			num1=$(echo "$2"|sed 's/\(g\|gr\|rad\)//g')
			ang=${2#$num1}
			echo "$2"|grep -E '(g|rad|gr)$' >/dev/null
			if ([ "$?" -eq "0" ] && zzmat testa_num $num1)
			then
				case $ang in
				"g") num2=$(zzmat converte gr $num1);;
				"gr") num2=$(zzmat converte dr $num1);;
				"rad") num2=$num1;;
				esac
				
				case $1 in
				"sen") num1=$(echo "$num2"|awk '{printf "%.6f", sin($1)}');;
				"cos") num1=$(echo "$num2"|awk '{printf "%.6f", cos($1)}');;
				"tan") num1=$(echo "$num2"|awk '{div=sprintf("%.6f", cos($1));if (div!="0.000000") printf "%.6f", sin($1)/cos($1);}');;
				"sec") num1=$(echo "$num2"|awk '{div=sprintf("%.6f", cos($1));if (div!="0.000000") printf "%.6f", 1/cos($1);}');;
				"csc") num1=$(echo "$num2"|awk '{div=sprintf("%.6f", sin($1));if (div!="0.000000") printf "%.6f", 1/sin($1);}');;
				"cot") num1=$(echo "$num2"|awk '{div=sprintf("%.6f", sin($1));if (div!="0.000000") printf "%.6f", cos($1)/sin($1);}');;
				esac
				
				[ "$num1" ] && num="$num1"
			else
				echo " Uso: zzmat $1 número(g|rad|gr) {graus|radianos|grado}"
			fi
		else
			echo " zzmat Função Trigonométrica:
	sen: Seno
	cos: Cosseno
	tan: Tangente
	sec: Secante
	csc: Cossecante
	cot: Cotangente"
			echo " Uso: zzmat $1 número(g|rad|gr) {graus|radianos|grado}"
			return 1
		fi
	;;
	"asen"|"acos"|"atan")
		if (([ "$#" -eq "2" ] || [ "$#" -eq "3" ]) && zzmat testa_num $2)
		then
			local num1 num2 num3
			num1=$(echo "$2"|tr ',' '.')
			[ "$1" != "atan" ] && num2=$(echo "$num1"|awk '{if ($1>1 || $1<-1) print "erro"}')
			if [ "$num2" = "erro" ]
			then
				zzmat $1 -h;return 1
			fi
			
			case $1 in
			"atan") num2=$(echo "a(${num1})"|bc -l);;
			"asen")
				num3=$(echo "sqrt(1-${num1}^2)"|bc -l|awk '{printf "%.6f\n", $1}')
				if [ "$num3" = "0.000000" ]
				then
					num2=$(echo "$pi/2"|bc -l)
				else
					num2=$(echo "a(${num1}/sqrt(1-${num1}^2))"|bc -l)
				fi
			;;
			"acos")
				num3=$(echo "$num1"|bc -l|awk '{printf "%.6f\n", $1}')
				if [ "$num3" = "0.000000" ]
				then
					num2=$(echo "$pi/2"|bc -l)
				else
					num2=$(echo "a(sqrt(1-${num1}^2)/${num1})"|bc -l)
				fi
			;;
			esac
			
			case $3 in
			"g") num="$(zzmat converte rg $num2)";;
			"gr") num="$(zzmat converte rd $num2)";;
			"rad"|"") num="$num2";;
			esac
		else
			echo " zzmat Função Trigonométrica:
	asen: Arco-Seno
	acos: Arco-Cosseno
	atan: Arco-Tangente"
			echo " Retorna o angulo em radianos, graus ou grado."
			echo " Se não for definido retorna em radianos."
			echo " Valores devem estar entre -1 e 1, para arco-seno e arco-cosseno"
			echo " Uso: zzmat $1 número [g|rad|gr] {graus|radianos|grado}"
			return 1
		fi
	;;
	"log"|"ln")
		if ([ "$#" -ge "2" ] && [ "$#" -le "3" ] && zzmat testa_num $2)
		then
			local num1 num2
			num1=$(echo $2|tr ',' '.')
			zzmat testa_num "$3" && num2=$(echo $3|tr ',' '.')
			if [ "$num2" ]
			then
				num="l($num1)/l($num2)"
			elif [ "$1" = "log" ]
			then
				num="l($num1)/l(10)"
			else
				num="l($num1)"
			fi
		else
			echo " zzmat log: Logaritmo base 10"
			echo " zzmat ln: Logaritmo Natural base e"
			echo " Uso: zzmat $1 numero [base]"
			return 1
		fi
	;;
	"area")
		if ([ "$#" -ge "2" ])
		then
			local num1 num2 num3
			case "$2" in
			"triangulo")
				if(zzmat testa_num $3 && zzmat testa_num $4)
				then
					num1=$(echo "$3"|tr ',' '.')
					num2=$(echo "$4"|tr ',' '.')
					num="${num1}*${num2}/2"
				else
					echo " Uso: zzmat $1 $2 base altura";return 1
				fi
			;;
			"quadrado")
				if(zzmat testa_num $3)
				then
					num1=$(echo "$3"|tr ',' '.')
					num="${num1}^2"
				else
					echo " Uso: zzmat $1 $2 lado";return 1
				fi
			;;
			"retangulo")
				if(zzmat testa_num $3 && zzmat testa_num $4)
				then
					num1=$(echo "$3"|tr ',' '.')
					num2=$(echo "$4"|tr ',' '.')
					num="${num1}*${num2}"
				else
					echo " Uso: zzmat $1 $2 base altura";return 1
				fi
			;;
			"losango")
				if(zzmat testa_num $3 && zzmat testa_num $4)
				then
					num1=$(echo "$3"|tr ',' '.')
					num2=$(echo "$4"|tr ',' '.')
					num="${num1}*${num2}/2"
				else
					echo " Uso: zzmat $1 $2 diagonal_maior diagonal_menor";return 1
				fi
			;;
			"trapezio")
				if(zzmat testa_num $3 && zzmat testa_num $4 && zzmat testa_num $5)
				then
					num1=$(echo "$3"|tr ',' '.')
					num2=$(echo "$4"|tr ',' '.')
					num3=$(echo "$5"|tr ',' '.')
					num="((${num1}+${num2})/2)*${num3}"
				else
					echo " Uso: zzmat $1 $2 base_maior base_menor altura";return 1
				fi
			;;
			"circulo")
				if (zzmat testa_num $3)
				then
					num1=$(echo "$3"|tr ',' '.')
					num="$pi*(${num1})^2"
				else
					echo " Uso: zzmat $1 $2 raio";return 1
				fi
			;;
			"esfera")
				if (zzmat testa_num $3)
				then
					num1=$(echo "$3"|tr ',' '.')
					num="4*$pi*(${num1})^2"
				else
					echo " Uso: zzmat $1 $2 raio";return 1
				fi
			;;
			"tetraedro"|"cubo"|"octaedro"|"dodecaedro"|"icosaedro")
				if(zzmat testa_num $3)
				then
					num1=$(echo "$3"|tr ',' '.')
					case $2 in
					"tetraedro")  num="sqrt(3)*${num1}^2";;
					"cubo")       num="6*${num1}^2";;
					"octaedro")   num="sqrt(3)*2*${num1}^2";;
					"dodecaedro") num="sqrt(25+10*sqrt(5))*3*${num1}^2";;
					"icosaedro")  num="sqrt(3)*5*${num1}^2";;
					esac
				else
					echo " Uso: zzmat $1 $2 lado";return 1
				fi
			;;
			esac
		else
			echo " zzmat $1: Cálculo da área de figuras planas e superfícies"
			echo " Uso: zzmat area [triangulo|quadrado|retangulo|losango|trapezio|circulo]"
			echo " Uso: zzmat area [esfera|tetraedo|cubo|octaedro|dodecaedro|icosaedro]"
			return 1
		fi
	;;
	"volume")
		if ([ "$#" -ge "2" ])
		then
			local num1 num2 num3
			case "$2" in
			"paralelepipedo")
				if(zzmat testa_num $3 && zzmat testa_num $4 && zzmat testa_num $5)
				then
					num1=$(echo "$3"|tr ',' '.')
					num2=$(echo "$4"|tr ',' '.')
					num3=$(echo "$5"|tr ',' '.')
					num="${num1}*${num2}*${num3}"
				else
					echo " Uso: zzmat $1 $2 comprimento largura altura";return 1
				fi
			;;
			"cilindro")
				if(zzmat testa_num $3 && zzmat testa_num $4)
				then
					num1=$(echo "$3"|tr ',' '.')
					num2=$(echo "$4"|tr ',' '.')
					num="($pi*(${num1})^2)*${num2}"
				else
					echo " Uso: zzmat $1 $2 raio altura";return 1
				fi
			;;
			"esfera")
				if (zzmat testa_num $3)
				then
					num1=$(echo "$3"|tr ',' '.')
					num="$pi*(${num1})^3*4/3"
				else
					echo " Uso: zzmat $1 $2 raio";return 1
				fi
			;;
			"cone")
				if(zzmat testa_num $3 && zzmat testa_num $4)
				then
					num1=$(echo "$3"|tr ',' '.')
					num2=$(echo "$4"|tr ',' '.')
					num="($pi*(${num1})^2)*${num2}/3"
				else
					echo " Uso: zzmat $1 $2 raio altura";return 1
				fi
			;;
			"prisma")
				if(zzmat testa_num $3 && zzmat testa_num $4)
				then
					num1=$(echo "$3"|tr ',' '.')
					num2=$(echo "$4"|tr ',' '.')
					num="${num1}*${num2}"
				else
					echo " Uso: zzmat $1 $2 area_base altura";return 1
				fi
			;;
			"piramide")
				if(zzmat testa_num $3 && zzmat testa_num $4)
				then
					num1=$(echo "$3"|tr ',' '.')
					num2=$(echo "$4"|tr ',' '.')
					num="${num1}*${num2}/3"
				else
					echo " Uso: zzmat $1 $2 area_base altura";return 1
				fi
			;;
			"tetraedro"|"cubo"|"octaedro"|"dodecaedro"|"icosaedro")
				if(zzmat testa_num $3)
				then
					num1=$(echo "$3"|tr ',' '.')
					case $2 in
					"tetraedro")  num="sqrt(2)/12*${num1}^3";;
					"cubo")       num="${num1}^3";;
					"octaedro")   num="sqrt(2)/3*${num1}^3";;
					"dodecaedro") num="(15+7*sqrt(5))*${num1}^3/4";;
					"icosaedro")  num="(3+sqrt(5))*${num1}^3*5/12";;
					esac
				else
					echo " Uso: zzmat $1 $2 lado";return 1
				fi
			;;
			esac
		else 
			echo " zzmat $1: Cálculo de volume de figuras geométricas"
			echo " Uso: zzmat volume [tetraedo|cubo|octaedro|dodecaedro|icosaedro]"
			echo " Uso: zzmat volume [paralelepipedo|cilindro|esfera|cone|prisma|piramide]"
			return 1
		fi
	;;
	"mmc"|"mdc"|"mmcmdc"|"mdcmmc")
		if ([ "$#" -eq "3" ] && [ "$2" -ne "$3" ] &&
		    zztool testa_numero "$2" &&
		    zztool testa_numero "$3")
		then
			local num_maior num_menor resto mdc mmc
			if [ "$2" -gt "$3" ]
			    num_maior="$2"
			    num_menor="$3"
			then
			    num_maior="$3"
			    num_menor="$2"
			fi
			
			while [ "$num_menor" -ne "0" ]
			do
				resto=$((${num_maior}%${num_menor}))
				num_maior=$num_menor
				num_menor=$resto
			done
			
			mdc=$num_maior
			mmc=$(($2*$3/$mdc))
			case $1 in
			"mmc") echo $mmc;;
			"mdc") echo $mdc;;
			"mmcmdc"|"mdcmmc") echo -e "MDC: $mdc \t MMC: $mmc";;
			esac
		else
			echo " zzmat mmc: Menor Múltiplo Comum"
			echo " zzmat mdc: Maior Divisor Comum"
			echo " Usar mmcmdc ou mdcmmc para exibir ambos resultados"
			echo " Uso: zzmat $1 numero numero"
			return 1
		fi
	;;
	"somatoria"|"produtoria")
		#colocar x como a variavel a ser substituida
		if ([ "$#" -eq "4" ] && zztool testa_numero $2 && zztool testa_numero $3 && zztool grep_var "x" $4)
		then
			local equacao numero operacao
			equacao=$(echo "$4"|sed 's/\[/(/g;s/\]/)/g')
			[ "$1" = "somatoria" ] && operacao='+' || operacao='*'
			num=$(for numero in $(zzseq $2 $3)
			do
				echo "($equacao)"|sed "s/x/$numero/g"
			done|paste -s -d"$operacao")
		else
			echo " zzmat $1: Soma ou Produto de expressão"
			echo " Uso: zzmat $1 limite_inferior limite_superior equacao"
			echo " Usar '[' e ']' respectivamente no lugar de '(' e ')'"
			return 1
		fi
	;;
	"media"|"soma")
		if ([ "$#" -ge "2" ])
		then
			local soma=0
			local qtde=0
			local peso=1
			local valor
			local subfuncao=$1
			shift
			while [ "$#" -ne "0" ]
			do
				if (zztool grep_var "[" "$1" && zztool grep_var "]" "$1")
				then
					valor=$(echo "$1"|sed 's/\([0-9]\+\)\[.*/\1/'|tr ',' '.')
					peso=$(echo "$1"|sed 's/.*\[//;s/\]//')
					if (zzmat testa_num "$valor" && zztool testa_numero "$peso")
					then
						soma=$(echo "$soma+($valor*$peso)"|bc -l)
						qtde=$(($qtde+$peso))
					fi
				elif zzmat testa_num "$1"
				then
					soma=$(echo "$soma + $1"|tr ',' '.'|bc -l)
					qtde=$(($qtde+1))
				else
					zztool uso mat; return;
				fi
				shift
			done
			case "$subfuncao" in
			"media") num="${soma}/${qtde}";;
			"soma")  num="${soma}";;
			esac
		else
			echo " zzmat $1:Soma ou Média Aritimética e Ponderada"
			echo " Uso: zzmat $1 numero[[peso]] [numero[peso]] ..."
			echo " Usar '[' e ']' respectivamente no lugar de '(' e ')'"
			return 1
		fi
	;;
	"fat")
		if ([ "$#" -eq "2" ] && zztool testa_numero "$2" && [ "$2" -gt "1" ])
		then
			zzseq 2 $2|paste -s -d*|bc -l
		else
			echo " zzmat $1: Resultado do produto de 1 ao numero atual (fatorial)"
			echo " Uso: zzmat $1 numero"
			return 1
		fi
	;;
	"arranjo"|"combinacao")
		if ([ "$#" -eq "3" ] && zztool testa_numero "$2" && zztool testa_numero "$3" && [ "$2" -gt "$3" ] && [ "$3" -gt "1" ])
		then
			local n p dnp
			n=$(zzseq $2|paste -s -d*|bc)
			p=$(zzseq $3|paste -s -d*|bc)
			dnp=$(zzseq $(($2-$3))|paste -s -d*|bc -l)
			case "$1" in
			"arranjo")    num="${n}/${dnp}";;
			"combinacao") num="${n}/(${p}*${dnp})";;
			esac
		else
			echo " zzmat arranjo: n elementos tomados em grupos de p (considera ordem)"
			echo " zzmat combinacao: n elementos tomados em grupos de p (desconsidera ordem)"
			echo " Uso: zzmat $1 total_numero quantidade_grupo"
			return 1
		fi
	;;
	"pa"|"pa2"|"pg")
		if ([ "$#" -eq "4" ])
		then
			local num_inicial razao passo valor
			if zzmat testa_num "$2"
			then
				if zzmat testa_num "$3"
				then
					if (zzmat testa_num "$4")
					then
						num_inicial=$(echo "$2"|tr ',' '.')
						razao=$(echo "$3"|tr ',' '.')
						passo=0
						valor=$num_inicial
						while ([ $passo -lt $4 ])
						do
							if [ "$1" = "pa" ]
							then
								valor=$(echo "$num_inicial + ($razao * $passo)"|bc -l|
								awk '{printf "%.6f\n", $1}'|sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
							elif [ "$1" = "pa2" ]
							then
								valor=$(echo "$valor + ($razao * $passo)"|bc -l|
								awk '{printf "%.6f\n", $1}'|sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
							else
								valor=$(echo "$num_inicial * $razao^$passo"|bc -l|
								awk '{printf "%.6f\n", $1}'|sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
							fi
							echo -n " $valor"
							passo=$(($passo+1))
						done
						echo
					fi
				fi
			fi
		else
			echo " zzmat pa: Progressão Aritmética"
			echo " zzmat pa2: Progressão Aritmética de Segunda Ordem"
			echo " zzmat pg: Progressão Geométrica"
			echo " Uso: zzmat $1 inicial razao quantidade_elementos"
			return 1
		fi
	;;
	"eq2g")
	#Equação do Segundo Grau: Raizes e Vértice
		if ([ "$#" = "4" ] && zzmat testa_num $2 && zzmat testa_num $3 && zzmat testa_num $4)
		then
			local delta num_raiz vert_x vert_y raiz1 raiz2
			delta=$(echo "$2 $3 $4"|tr ',' '.'|awk '{valor=$2^2-(4*$1*$3); print valor}')
			num_raiz=$(echo "$delta"|awk '{ if ($1 > 0)  {print "2"}
							if ($1 == 0) {print "1"}
							if ($1 < 0)  {print "0"}}')
			
			vert_x=$(echo "$2 $3"|tr ',' '.'|awk '{valor=((-1 * $2)/(2 * $1)); printf "%.6f\n", valor}'|
			sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
			
			vert_y=$(echo "$2 $delta"|tr ',' '.'|awk '{valor=((-1 * $2)/(4 * $1)); printf "%.6f\n", valor}'|
			sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
			
			case $num_raiz in
			"0") raiz1="Sem raiz";;
			"1") raiz1=$vert_x;;
			"2")
				raiz1=$(echo "$2 $3 $delta"|tr ',' '.'|
				awk '{valor=((-1 * $2)-sqrt($3))/(2 * $1); printf "%.6f\n", valor}'|
				sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
				
				raiz2=$(echo "$2 $3 $delta"|tr ',' '.'|
				awk '{valor=((-1 * $2)+sqrt($3))/(2 * $1); printf\n "%.6f", valor}'|
				sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
			;;
			esac
			[ "$num_raiz" = "2" ] && echo -e " X1: $raiz1 \n X2: $raiz2" || echo " X: $raiz1"
			echo " Vertice: (${vert_x}, ${vert_y})"
		else
			echo " zzmat $1: Equação do Segundo Grau (Raízes e Vértice)"
			echo " Uso: zzmat $1 A B C"
			return 1
		fi
	;;
	"d2p")
		if ([ "$#" = "3" ] && zztool grep_var "," "$2" && zztool grep_var "," "$3")
		then
			local x1 y1 z1 x2 y2 z2 a b
			x1=$(echo "$2"|cut -f1 -d,)
			y1=$(echo "$2"|cut -f2 -d,)
			z1=$(echo "$2"|cut -f3 -d,)
			x2=$(echo "$3"|cut -f1 -d,)
			y2=$(echo "$3"|cut -f2 -d,)
			z2=$(echo "$3"|cut -f3 -d,)
			if (zzmat testa_num $x1 && zzmat testa_num $y1 && zzmat testa_num $x2 && zzmat testa_num $y2 )
			then
				a=$(echo "($y1-$y2)^2"|bc -l)
				b=$(echo "($x1-$x2)^2"|bc -l)
				if (zzmat testa_num $z1 && zzmat testa_num $z2)
				then
					num="sqrt(($z1-$z2)^2+$a+$b)"
				else
					num="sqrt($a+$b)"
				fi
			else
				echo " Uso: zzmat $1 ponto(a,b) ponto(x,y)";return 1
			fi
		else
			echo " zzmat $1: Distância entre 2 pontos"
			echo " Uso: zzmat $1 ponto(a,b) ponto(x,y)"
			return 1
		fi
	;;
	"vetor")
		if ([ "$#" -ge "3" ])
		then
			local valor ang teta fi oper tipo num1 saida
			local x1=0
			local y1=0
			local z1=0
			shift
			
			[ "$1" = "-e" -o "$1" = "-c" ] && tipo="$1" || tipo="-e"
			oper="+"
			saida=$(echo "$*"|awk '{print $NF}')
			
			while ([ "$#" -ge "1" ])
			do
				valor=$(echo "$1"|cut -f1 -d,)
				zztool grep_var "," $1 && teta=$(echo "$1"|cut -f2 -d,)
				zztool grep_var "," $1 && fi=$(echo "$1"|cut -f3 -d,)
				
				if ([ "$fi" ] && zzmat testa_num $valor)
				then
					num1=$(echo "$fi"|sed 's/\(g\|gr\|rad\)//g')
					ang=${fi#$num1}
					echo "$fi"|grep -E '(g|rad|gr)$' >/dev/null
					if ([ "$?" -eq "0" ] && zzmat testa_num $num1)
					then
						case $ang in
						"g")   fi=$(zzmat converte gr $num1);;
						"gr")  fi=$(zzmat converte dr $num1);;
						"rad") fi=$num1;;
						esac
						z1=$(echo "$z1 $oper $(zzmat cos ${fi}rad) * $valor"|bc -l)
					elif zzmat testa_num $num1
					then
						z1="$num1"
					fi
				fi
				
				if ([ "$teta" ] && zzmat testa_num $valor)
				then
					num1=$(echo "$teta"|sed 's/\(g\|gr\|rad\)//g')
					ang=${teta#$num1}
					echo "$teta"|grep -E '(g|rad|gr)$' >/dev/null
					if ([ "$?" -eq "0" ] && zzmat testa_num $num1)
					then
						case $ang in
						"g")   teta=$(zzmat converte gr $num1);;
						"gr")  teta=$(zzmat converte dr $num1);;
						"rad") teta=$num1;;
						esac
					else
						unset teta
					fi
				fi
				
				if zzmat testa_num $valor
				then
					[ "$fi" ] && num1=$(echo "$(zzmat sen ${fi}rad)*$valor"|bc -l) || num1=$valor
					[ "$teta" ] && x1=$(echo "$x1 $oper $(zzmat cos ${teta}rad) * $num1"|bc -l) || x1=$(echo "$x1 $oper $num1"|bc -l)
					[ "$teta" ] && y1=$(echo "$y1 $oper $(zzmat sen ${teta}rad) * $num1"|bc -l)
				fi
				shift
			done
			
			valor=$(echo "sqrt(${x1}^2+${y1}^2+${z1}^2)"|bc -l)
			teta=$(zzmat asen $(echo "${y1}/sqrt(${x1}^2+${y1}^2)"|bc -l))
			fi=$(zzmat acos $(echo "${z1}/${valor}"|bc -l))
			
			case $saida in
			"g")
				teta=$(zzmat converte rg $teta)
				fi=$(zzmat converte rg $fi)
			;;
			"gr")
				teta=$(zzmat converte rd $teta)
				fi=$(zzmat converte rd $fi)
			;;
			*) saida="rad";;
			esac
			
			teta=$(echo "$teta"|awk '{printf "%.4f\n", $1}'|sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
			fi=$(echo "$fi"|awk '{printf "%.4f\n", $1}'|sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
			
			if [ "$tipo" = "-c" ]
			then
				valor=$(echo "sqrt(${valor}^2-$z1^2)"|bc -l|awk '{printf "%.4f\n", $1}'|sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
				echo "${valor},${teta}${saida},${z1}"
			else
				valor=$(echo "$valor"|bc -l|awk '{printf "%.4f\n", $1}'|sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/')
				echo "${valor},${teta}${saida},${fi}${saida}"
			fi
		else
			echo " zzmat $1: Operação entre vetores"
			echo " Tipo de saída podem ser: padrão (-e)"
			echo "  -e: vetor em coordenadas esférica: valor[,teta(g|rad|gr),fi(g|rad|gr)];"
			echo "  -c: vetor em coordenada cilindrica: raio[,teta(g|rad|gr),altura]."
			echo " Os angulos teta e fi tem sufixos g(graus), rad(radianos) ou gr(grados)."
			echo " Os argumentos de entrada seguem o mesmo padrão do tipo de saída."
			echo " E os tipos podem ser misturados em cada argumento."
			echo " Unidade angular é o angulo de saida usado para o vetor resultante,"
			echo " e pode ser escolhida entre g(graus), rad(radianos) ou gr(grados)."
			echo " Não use separador de milhar. Use o ponto(.) como separador decimal."
			echo " Uso: zzmat $1 [tipo saida] vetor [vetor2] ... [unidade angular]"
			return 1
		fi
	;;
	"egr")
	#Equação Geral da Reta
	#ax + by + c = 0
	#y1 – y2 = a
	#x2 – x1 = b
	#x1y2 – x2y1 = c
		if ([ "$#" = "3" ] && zztool grep_var "," "$2" && zztool grep_var "," "$3")
		then
			local x1 y1 x2 y2 a b c
			x1=$(echo "$2"|cut -f1 -d,)
			y1=$(echo "$2"|cut -f2 -d,)
			x2=$(echo "$3"|cut -f1 -d,)
			y2=$(echo "$3"|cut -f2 -d,)
			if (zzmat testa_num $x1 && zzmat testa_num $y1 && zzmat testa_num $x2 && zzmat testa_num $y2 )
			then
				a=$(echo "$y1 $y2"|awk '{valor=($1)-($2); print valor}')
				b=$(echo "$x1 $x2"|awk '{valor=($2)-($1);  print (valor<0?"":"+") valor}')
				c=$(zzmat det $x1 $y1 $x2 $y2|awk '{print ($1<0?"":"+") $1}')
				echo "${a}x${b}y${c}=0"|sed 's/\([+-]\)1\([xy]\)/\1\2/g;s/[+]\{0,1\}0[xy]//g;s/+0=0/=0/;s/^+//'
			else
				echo " Uso: zzmat $1 ponto(a,b) ponto(x,y)";return 1
			fi
		else
			echo " zzmat $1: Equação Geral da Reta"
			echo " Uso: zzmat $1 ponto(a,b) ponto(x,y)"
			return 1
		fi
	;;
	"egc")
	#Equação Geral da Circunferência: Centro e Raio ou Centro e Ponto
	#x2 + y2 - 2ax - 2by + a2 + b2 - r2 = 0
	#A=-2ax | B=-2by | C=a2+b2-r2
	#r=raio | a=coordenada x do centro | b=coordenada y do centro
		if ([ "$#" = "3" ] && zztool grep_var "," "$2")
		then
			local a b r A B C
			if zztool grep_var "," "$3"
			then
				r=$(zzmat d2p $2 $3)
			elif zzmat testa_num "$3"
			then
				r=$(echo "$3"|tr ',' '.')
			else
				echo " Uso: zzmat $1 centro(a,b) (numero|ponto(x,y))";return 1
			fi
			a=$(echo "$2"|cut -f1 -d,)
			b=$(echo "$2"|cut -f2 -d,)
			A=$(echo "$a"|awk '{valor=-2*($1); print (valor<0?"":"+") valor}')
			B=$(echo "$b"|awk '{valor=-2*($1); print (valor<0?"":"+") valor}')
			C=$(echo "$a $b $r"| awk '{valor=($1)^2+($2)^2-($3)^2; print (valor<0?"":"+") valor}')
			echo "x^2+y^2${A}x${B}y${C}=0"|sed 's/\([+-]\)1\([xy]\)/\1\2/g;s/[+]0[xy]//g;s/+0=0/=0/'
		else
			echo " zzmat $1: Equação Geral da Circunferência (Centro e Raio ou Centro e Ponto)"
			echo " Uso: zzmat $1 centro(a,b) (numero|ponto(x,y))"
			return 1
		fi
	;;
	"egc3p")
	#Equação Geral da Circunferência: 3 Pontos
		if ([ "$#" = "4" ] && zztool grep_var "," "$2" && zztool grep_var "," "$3" && zztool grep_var "," "$4")
		then
			local x1 y1 x2 y2 x3 y3 A B C D
			x1=$(echo "$2"|cut -f1 -d,)
			y1=$(echo "$2"|cut -f2 -d,)
			x2=$(echo "$3"|cut -f1 -d,)
			y2=$(echo "$3"|cut -f2 -d,)
			x3=$(echo "$4"|cut -f1 -d,)
			y3=$(echo "$4"|cut -f2 -d,)
			
			if (! zzmat testa_num $x1 || ! zzmat testa_num $x2 || ! zzmat testa_num $x3)
			then
				echo " Uso: zzmat $1 ponto(a,b) ponto(c,d) ponto(x,y)";return 1
			fi
			
			if (! zzmat testa_num $y1 || ! zzmat testa_num $y2 || ! zzmat testa_num $y3)
			then
				echo " Uso: zzmat $1 ponto(a,b) ponto(c,d) ponto(x,y)";return 1
			fi
			
			D=$(zzmat det $x1 $y1 1 $x2 $y2 1 $x3 $y3 1)
			A=$(zzmat det -$(echo "$x1^2+$y1^2"|bc) $y1 1 -$(echo "$x2^2+$y2^2"|bc) $y2 1 -$(echo "$x3^2+$y3^2"|bc) $y3 1)
			B=$(zzmat det $x1 -$(echo "$x1^2+$y1^2"|bc) 1 $x2 -$(echo "$x2^2+$y2^2"|bc) 1 $x3 -$(echo "$x3^2+$y3^2"|bc) 1)
			C=$(zzmat det $x1 $y1 -$(echo "$x1^2+$y1^2"|bc) $x2 $y2 -$(echo "$x2^2+$y2^2"|bc) $x3 $y3 -$(echo "$x3^2+$y3^2"|bc))
			
			A=$(echo "$A $D"|awk '{valor=$1/$2;print (valor<0?"":"+") valor}')
			B=$(echo "$B $D"|awk '{valor=$1/$2;print (valor<0?"":"+") valor}')
			C=$(echo "$C $D"|awk '{valor=$1/$2;print (valor<0?"":"+") valor}')
			
			x1=$(echo "$A"|awk '{valor=$1/2*-1;print valor}')
			y1=$(echo "$B"|awk '{valor=$1/2*-1;print valor}')
			
			echo "x^2+y^2${A}x${B}y${C}=0"|sed 's/\([+-]\)1\([xy]\)/\1\2/g;s/[+]0[xy]//g;s/+0=0/=0/'
			echo "Centro: (${x1}, ${y1})"
		else
			echo " zzmat $1: Equação Geral da Circunferência (3 pontos)"
			echo " Uso: zzmat $1 ponto(a,b) ponto(c,d) ponto(x,y)"
			return 1
		fi
	;;
	"ege")
	#Equação Geral da Esfera: Centro e Raio ou Centro e Ponto
	#x2 + y2 + z2 - 2ax - 2by -2cz + a2 + b2 + c2 - r2 = 0
	#A=-2ax | B=-2by | C=-2cz | D=a2+b2+c2-r2
	#r=raio | a=coordenada x do centro | b=coordenada y do centro | c=coordenada z do centro
		if ([ "$#" = "3" ] && zztool grep_var "," "$2")
		then
			local a b c r A B C D
			if zztool grep_var "," "$3"
			then
				r=$(zzmat d2p $2 $3)
			elif zzmat testa_num "$3"
			then
				r=$(echo "$3"|tr ',' '.')
			else
				echo " Uso: zzmat $1 centro(a,b,c) (numero|ponto(x,y,z))";return 1
			fi
			a=$(echo "$2"|cut -f1 -d,)
			b=$(echo "$2"|cut -f2 -d,)
			c=$(echo "$2"|cut -f3 -d,)
			
			if(! zzmat testa_num $a || ! zzmat testa_num $b || ! zzmat testa_num $c)
			then
				echo " Uso: zzmat $1 centro(a,b,c) (numero|ponto(x,y,z))";return 1
			fi
			A=$(echo "$a"|awk '{valor=-2*($1); print (valor<0?"":"+") valor}')
			B=$(echo "$b"|awk '{valor=-2*($1); print (valor<0?"":"+") valor}')
			C=$(echo "$c"|awk '{valor=-2*($1); print (valor<0?"":"+") valor}')
			D=$(echo "$a $b $c $r"| awk '{valor=$1^2+$2^2+$3^2-$4^2; print (valor<0?"":"+") valor}')
			echo "x^2+y^2+z^2${A}x${B}y${C}z${D}=0"|sed 's/\([+-]\)1\([xyz]\)/\1\2/g;s/[+]0[xyz]//g;s/+0=0/=0/'
		else
			echo " zzmat $1: Equação Geral da Esfera (Centro e Raio ou Centro e Ponto)"
			echo " Uso: zzmat $1 centro(a,b,c) (numero|ponto(x,y,z))"
			return 1
		fi
	;;
	"det")
		# Determinante de matriz (2x2 ou 3x3)
		if ([ "$#" -ge "2" ])
		then
			local num
			shift
			for num in $*
			do
				if ! zzmat testa_num "$num" ; then return 1;fi
			done
			case "$#" in
			"4") num=$(echo "($1*$4)-($2*$3)"|tr ',' '.');;
			"9") num=$(echo "(($1*$5*$9)+($7*$2*$6)+($4*$8*$3)-($7*$5*$3)-($4*$2*$9)-($1*$8*$6))"|tr ',' '.');;
			*) return 1;;
			esac
		fi
	;;
	"conf_eq")
		# Confere equação
		if ([ "$#" -ge "2" ])
		then
			equacao=$(echo "$2"|sed 's/\[/(/g;s/\]/)/g')
			local x y z eq
			shift 2
			while ([ "$#" -ge "1" ])
			do
				x=$(echo "$1"|cut -f1 -d,)
				zztool grep_var "," $1 && y=$(echo "$1"|cut -f2 -d,)
				zztool grep_var "," $1 && z=$(echo "$1"|cut -f3 -d,)
				eq=$(echo $equacao| sed "s/^[x]/$x/;s/\([(+-]\)x/\1($x)/g;s/\([0-9]\)x/\1\*($x)/g"|
						    sed "s/^[y]/$y/;s/\([(+-]\)y/\1($y)/g;s/\([0-9]\)y/\1\*($y)/g"|
						    sed "s/^[z]/$z/;s/\([(+-]\)z/\1($z)/g;s/\([0-9]\)z/\1\*($z)/g")
				echo "$eq" | bc -l
				unset x y z eq
				shift
			done
		else
			echo " zzmat $1: Confere ou resolve equação."
			echo " As variáveis a serem consideradas são x, y ou z nas fórmulas."
			echo " As variáveis são justapostas em cada argumento separados por vírgula."
			echo " Cada argumento adicional é um novo conjunto de variáveis na fórmula."
			echo " Usar '[' e ']' respectivamente no lugar de '(' e ')'."
			echo " Potenciação é representado com o uso de '^', ex: 3^2."
			echo " Não use separador de milhar. Use o ponto(.) como separador decimal."
			echo " Uso: zzmat $1 equacao numero|ponto(x,y[,z])"
			echo " Ex:  zzmat conf_eq x^2+3*[y-1]-2z+5 7,6.8,9 3,2,5.1"
			return 1
		fi
	;;
	*)
	zzmat -h
	;;
	esac
	
	if [ "$?" -ne "0" ]
	then
		return 1
	elif [ "$num" ]
	then
		echo "$num"|bc -l|awk '{printf "%.6f\n", $1}'|sed 's/^0$/zero/;s/0\+$//;s/\.$//;s/^zero$/0/'
	fi
}
