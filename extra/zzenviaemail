# ----------------------------------------------------------------------------
# Envia email via ssmtp.
# Autor: Lauro Cavalcanti de Sa <lauro (a) ecdesa com>
# Desde: 17 de Setembro de 2009
# Licenca: GPL v2
# Versao: 20091010
# Requer: ssmtp
# Uso: zzenviaemail [-h] [-v] [-V] -f email -t emails [-c emails] [-b emails] -s subject -m mensagem
# Opcoes:
#         -h, --help     exibe a ajuda.
#         -v, --verbose  exibe informacoes para debug durante o processamento.
#         -V, --version  exibe a versao.
#         -f, --from     informa email do remetente.
#         -t, --to       informa email dos destinatarios diretos separados por virgula SOMENTE (sem espaco).
#         -c, --cc       informa email dos destinatarios em copia separados por virgula SOMENTE (sem espaco).
#         -b, --bcc      informa email dos destinatarios em copia oculta separados por virgula SOMENTE (sem espaco).
#         -s, --subject  informa o assunto do email.
#         -e, --mensagem informa o caminho do arquivo que contem a mensagem/corpo do email.
# Ex.: zzenviaemail -f quem_envia@dominio.com -t quem_recebe@dominio.com -s "Teste de e-mail" -m "./arq_msg.eml"
# ----------------------------------------------------------------------------
# Versao 20091010:
#  Troca do versionamento de numeral para tipo data.
#  Mudanca dos return codes, utilizando 1 para erros de chamada.
#  Insercao do modo verbose.
#  Insercao da opcao de help.
#  Insercao da opcao de versao.
#  Mudanca da verificacao dos parametros minimos com contagem.
#  Modificacao onde aparece o nome da funcao por ${FUNCNAME}.
#  Verificacao do arquivo de entrada atraves de zztool arquivo_existe.
#  Mudanca do local de salvamento do arq temporario de /tmp para ZZTMPDIR.
# ----------------------------------------------------------------------------
zzenviaemail ()
{
	zzzz -h "${FUNCNAME}" $1 && return
	
	# Declara variaveis.
	local fromail tomail ccmail bccmail subject msgbody
	local envia_data=`date +"%Y%m%d_%H%M%S_%N"`
	local script_eml="${ZZTMPDIR}/.${FUNCNAME}_${envia_data}.eml"
	local nparam=0
	
	# Opcoes de linha de comando
	while [ $# -ge 1 ]
	do
		case "$1" in
			-f | --from)
				[ "$2" ] || { zztool uso "${FUNCNAME}"; set +x; return 1; }
				fromail=$2
				nparam=$(($nparam + 1))
				shift
				;;
			-t | --to)
				[ "$2" ] || { zztool uso "${FUNCNAME}"; set +x; return 1; }
				tomail=$2
				nparam=$(($nparam + 1))
				shift
				;;
			-c | --cc)
				[ "$2" ] || { zztool uso "${FUNCNAME}"; set +x; return 1; }
				ccmail=$2
				shift
				;;
			-b | --bcc)
				[ "$2" ] || { zztool uso "${FUNCNAME}"; set +x; return 1; }
				bccmail=$2
				shift
				;;
			-s | --subject)
				[ "$2" ] || { zztool uso "${FUNCNAME}"; set +x; return 1; }
				subject=$2
				nparam=$(($nparam + 1))
				shift
				;;
			-m | --mensagem)
				[ "$2" ] || { zztool uso "${FUNCNAME}"; set +x; return 1; }
				mensagem=$2
				nparam=$(($nparam + 1))
				shift
				;;
			-h | --help)
				{ zztool uso "${FUNCNAME}"; set +x; return ; }
				;;
			-v | --verbose)
				set -x
				;;
			-V | --version)
				{ cat "${ZZEXTRADIR}/${FUNCNAME}" | cut -c3- | grep "^Versao:" ; set +x; return; }
				;;
			*) { zztool uso "${FUNCNAME}"; set +x; return 1; } ;;
		esac
		shift
	done
	
	# Verifica numero minimo de parametros.
	if [ "${nparam}" != 4 ] ; then
		{ zztool uso "${FUNCNAME}"; set +x; return 1; }
	fi
	
	# Verifica se o arquivo existe.
	zztool arquivo_existe "${mensagem}"

    # Monta e-mail padrao para envio via SMTP.
	echo "From: ${fromail} <${fromail}>" > ${script_eml}
    echo "To: ${tomail}" >> ${script_eml}
    echo "Cc: ${ccmail}" >> ${script_eml}
    echo "Bcc: ${bccmail}" >> ${script_eml}
    echo "Subject: ${subject}" >> ${script_eml}
    cat ${mensagem} >> ${script_eml}
    ssmtp -F ${1} ${tomail} ${ccmail} ${bccmail} < ${script_eml}
	if [ -s "${script_eml}" ] ; then
		rm -f "${script_eml}"
	fi
	
	set +x
}
